{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/daniel/V\\xEDdeos/gatito - Kemily/src/telas/carrinho/Item/index.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Botao from \"../../../componentes/Botao\";\nimport CampoInteiro from \"../../../componentes/CampoInteiro\";\nimport estilos from \"./estilo\";\nexport default function Item(_ref) {\n  var nome = _ref.nome,\n      preco = _ref.preco,\n      descricao = _ref.descricao,\n      quantidadeInicial = _ref.quantidade;\n\n  var _useState = useState(quantidadeInicial),\n      _useState2 = _slicedToArray(_useState, 2),\n      quantidade = _useState2[0],\n      setQuantidade = _useState2[1];\n\n  var _useState3 = useState(preco * quantidadeInicial),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var atualizaQuantidadeTotal = function atualizaQuantidadeTotal(novaQuantidade) {\n    setQuantidade(novaQuantidade);\n    calculaTotal(novaQuantidade);\n  };\n\n  var calculaTotal = function calculaTotal(novaQuantidade) {\n    setTotal(novaQuantidade * preco);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: estilos.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, nome), React.createElement(Text, {\n    style: estilos.descricao,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, descricao), React.createElement(Text, {\n    style: estilos.preco,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(preco))), React.createElement(View, {\n    style: estilos.carrinho,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: estilos.valor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: estilos.descricao,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Quantidade:\"), React.createElement(CampoInteiro, {\n    valor: quantidade,\n    acao: atualizaQuantidadeTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: estilos.valor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: estilos.descricao,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Total:\"), React.createElement(Text, {\n    style: estilos.preco,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(total), \" \")), React.createElement(Botao, {\n    valor: \"Remover do Carrinho\",\n    acao: function acao() {\n      return calculaTotal(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: estilos.divisor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/home/daniel/VÃ­deos/gatito - Kemily/src/telas/carrinho/Item/index.js"],"names":["React","useState","Botao","CampoInteiro","estilos","Item","nome","preco","descricao","quantidadeInicial","quantidade","setQuantidade","total","setTotal","atualizaQuantidadeTotal","novaQuantidade","calculaTotal","Intl","NumberFormat","style","currency","format","carrinho","valor","divisor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Text,  View} from 'react-native';\nimport Botao from '../../../componentes/Botao';\nimport CampoInteiro from '../../../componentes/CampoInteiro';\nimport estilos from './estilo'\n\n\nexport default function Item({nome, preco, descricao, quantidade: quantidadeInicial}){\n    const [quantidade, setQuantidade] = useState(quantidadeInicial)\n    const [total, setTotal] = useState(preco * quantidadeInicial)\n    \n\n    const atualizaQuantidadeTotal =(novaQuantidade) =>{\n        setQuantidade(novaQuantidade);\n        calculaTotal(novaQuantidade)\n    }\n\n    const calculaTotal =(novaQuantidade) => {\n        setTotal(novaQuantidade * preco);\n    }\n\n    return <>\n    <View>\n        <Text style = {estilos.nome} >{nome}</Text>\n        <Text style = {estilos.descricao}>{descricao}</Text>\n        <Text style = {estilos.preco} >{\n        Intl.NumberFormat('pt-BR',{\n            style: 'currency', currency: 'BRL'\n        }).format(preco)}\n        </Text>\n        </View>\n    \n    <View style = {estilos.carrinho}>\n        <View>\n            <View style = {estilos.valor}>\n                <Text style = {estilos.descricao}>Quantidade:</Text>\n                <CampoInteiro valor = {quantidade} acao = {atualizaQuantidadeTotal} />\n            </View>\n            <View style = {estilos.valor}>                                                                                                                                                              \n                <Text style = {estilos.descricao}>Total:</Text>\n                <Text style = {estilos.preco}>{\n                    Intl.NumberFormat('pt-BR',{\n                style: 'currency', currency: 'BRL'\n            }).format(total)} </Text>\n            </View>\n                <Botao valor = \"Remover do Carrinho\" acao = {() => calculaTotal(0)}/>\n\n        </View>\n    </View>\n    \n\n        \n    <View style = {estilos.divisor} />\n    </>\n}\n   \n    "]},"metadata":{},"sourceType":"module"}